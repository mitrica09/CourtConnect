@model CourtConnect.ViewModel.Match.MatchResultViewModel
<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<link href="~/css/admin/general_pages.css" rel="stylesheet" />
<link href="~/css/match/addscore.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/remixicon@3.2.0/fonts/remixicon.css" rel="stylesheet">
<script src="~/lib/jquery/dist/jquery.min.js"></script>


@{
    ViewData["Title"] = "Adaugă Scor";
    var setsJson = Html.Raw(Json.Serialize(Model.Sets));
    var playersJson = Html.Raw(Json.Serialize(Model.Players));
    var scoresJson = Html.Raw(Json.Serialize(Model.Scores));
}

<h2>Adaugă scorul meciului</h2>

<form asp-action="AddScore" method="post" id="scoreForm">
    <input type="hidden" asp-for="MatchId" />

    <div id="setContainer">
        @for (int i = 0; i < Model.SetResults.Count; i++)
        {
            <div class="set-form border p-3 mb-3 rounded">
                <h4>Set @(i + 1)</h4>

                <div class="form-group">
                    <label>Set</label>
                    <select name="SetResults[@i].SetId" class="form-control">
                        @foreach (var set in Model.Sets)
                        {
                            <option value="@set.Value">@set.Text</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label>Jucător</label>
                    <select name="SetResults[@i].UserId" class="form-control">
                        @foreach (var player in Model.Players)
                        {
                            <option value="@player.Value">@player.Text</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <label>Scor</label>
                    <select name="SetResults[@i].Score" class="form-control">
                        @foreach (var score in Model.Scores)
                        {
                            <option value="@score.Value">@score.Text</option>
                        }
                    </select>
                </div>
            </div>
        }
    </div>

    <div id="maxSetWarning" class="alert alert-warning d-none">
        Poți adăuga maximum 3 seturi.
    </div>

    <button type="button" class="btn btn-secondary mb-3" id="addSetBtn">Adaugă încă un set</button>
    <br />
    <button type="submit" class="btn btn-success">Salvează Scorul</button>
</form>


<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<link href="https://cdn.jsdelivr.net/npm/remixicon@3.2.0/fonts/remixicon.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>



@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        let setIndex = @Model.SetResults.Count;

        const sets = @setsJson;
        const players = @playersJson;
        const scores = @scoresJson;

        $('#addSetBtn').on('click', function () {
            if (setIndex >= 3) {
                $('#maxSetWarning').removeClass('d-none');
                return;
            }

            const html = `
            <div class="set-form border p-3 mb-3 rounded">
                <h4>Set ${setIndex + 1}</h4>

                <div class="form-group">
                    <label>Set</label>
                    <select name="SetResults[${setIndex}].SetId" class="form-control">
                        ${sets.map(s => `<option value="${s.value}">${s.text}</option>`).join('')}
                    </select>
                </div>

                <div class="form-group">
                    <label>Jucător</label>
                    <select name="SetResults[${setIndex}].UserId" class="form-control">
                        ${players.map(p => `<option value="${p.value}">${p.text}</option>`).join('')}
                    </select>
                </div>

                <div class="form-group">
                    <label>Scor</label>
                    <select name="SetResults[${setIndex}].Score" class="form-control">
                        ${scores.map(sc => `<option value="${sc.value}">${sc.text}</option>`).join('')}
                    </select>
                </div>
            </div>`;

            $('#setContainer').append(html);
            setIndex++;

            if (setIndex >= 3) {
                $('#addSetBtn').prop('disabled', true);
                $('#maxSetWarning').removeClass('d-none');
            }
        });
    </script>
}
