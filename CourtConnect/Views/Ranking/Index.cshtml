@model CourtConnect.ViewModel.Ranking.RankingViewModel
@using X.PagedList
@using X.PagedList.Mvc.Core
@{
    ViewData["Title"] = "Clasament";
}

<link href="~/css/ranking/ranking.css" rel="stylesheet" />

<form>
    @using (Html.BeginForm("Index", "Ranking", FormMethod.Get))
    {
        @Html.Partial("_RankingFilter", Model.Filter)
        ;
    }
</form>

<div class="ranking-container">
    <h1 class="ranking-title">🏆 Clasament General 🏆</h1>

    <table class="ranking-table">
        <thead>
            <tr>
                <th>Loc</th>
                <th>Nume</th>
                <th>Club</th>
                <th>Nivel</th>
                <th>Puncte</th>
            </tr>
        </thead>
        <tbody>
            @{
                int pageSize = Model.Ranking.PageSize; 
                int pageNumber = Model.Ranking.PageNumber; 
                int indexStart = (pageNumber - 1) * pageSize; 
            }

            @for (int i = 0; i < Model.Ranking.Count(); i++)
            {
                int rankNumber = indexStart + i + 1; 

                <tr class="ranking-row @(rankNumber == 1 ? "gold" : rankNumber == 2 ? "silver" : rankNumber == 3 ? "bronze" : "")">
                    <td class="rank-number">@rankNumber</td>
                    <td>@Model.Ranking[i].FullName</td>
                    <td>@Model.Ranking[i].Club</td>
                    <td>@Model.Ranking[i].Level</td>
                    <td class="rank-points">@Model.Ranking[i].Points</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="pagination-container">
        @Html.PagedListPager(Model.Ranking, page => Url.Action("Index", new
            {
                page,
                levelId = Model.Filter.LevelId,
                clubId = Model.Filter.ClubId,
                name = Model.Filter.Name
            }),
                 new PagedListRenderOptions
        {
            DisplayLinkToFirstPage = PagedListDisplayMode.Always, 
            DisplayLinkToLastPage = PagedListDisplayMode.Always,  
            DisplayLinkToPreviousPage = PagedListDisplayMode.Always, 
            DisplayLinkToNextPage = PagedListDisplayMode.Always, 
            MaximumPageNumbersToDisplay = 5, 
            UlElementClasses = new[] { "pagination", "custom-pagination" }, 
            LiElementClasses = new[] { "page-item" }, 
            PageClasses = new[] { "page-link" }
        })
    </div>
</div>
